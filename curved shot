-- Variables to keep track of the system
local peekingActive = false -- Whether peeking is enabled
local peekChance = 0.38 -- 38% chance to peek at the same time

-- Function to check if peeking should occur
local function checkPeeking()
    -- Generate a random number between 0 and 1
    local randomChance = math.random()
    
    -- If the random chance is less than or equal to peekChance (0.38), peek at the same time
    if randomChance <= peekChance then
        print("Peeked at the same time as opponent!")
        -- You can put your peeking logic here (e.g., trigger animations or camera movements)
    else
        print("Missed peeking.")
    end
end

-- Function to toggle the peeking feature
local function togglePeeking()
    peekingActive = not peekingActive -- Toggle the active state
    if peekingActive then
        print("Peeking is now activated.")
    else
        print("Peeking is now deactivated.")
    end
end

-- Set up a keybind for pressing "R" to toggle the system
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.R then
        togglePeeking()
    end
end)

-- You can call this function when you want to trigger a peek-check (e.g., when an opponent peeks)
local function opponentPeeks()
    if peekingActive then
        checkPeeking() -- Check if the player peeks at the same time
    else
        print("Peeking is disabled.")
    end
end

-- Example of triggering the opponent peek function (you can connect this to your game logic)
-- opponentPeeks() should be called whenever an opponent's peeking action happens in your game logic
